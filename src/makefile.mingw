# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

CC=gcc
CXX=g++

STATIC=1

USE_UPNP:=-
USE_IPV6:=0

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"$(CURDIR)/json" \
 -I"$(CURDIR)/tor" \
 -I"$(CURDIR)/leveldb/include" \
 -I"$(CURDIR)/leveldb/helpers" \
 -I"/usr/local/include/boost-1_55" \
 -I"/usr/local/cryptopp562" \
 -I"/usr/local/include" \
 -I"/usr/local/ssl/include" \
 -I"/usr/local" \
 
LIBPATHS= \
 -L"$(CURDIR)/leveldb" \
 -L"/usr/local/ssl/lib" \
 -L"/usr/local/lib" \
 -L"/usr/local/cryptopp562"


LIBS= \
 -lboost_system-mgw44-mt-d-1_55 \
 -lboost_filesystem-mgw44-mt-d-1_55 \
 -lboost_program_options-mgw44-mt-d-1_55 \
 -lboost_thread-mgw44-mt-d-1_55 \
 -ldb_cxx \
 -lssl \
 -lcrypto \
 -levent \
 -lz \
 -lcryptopp \
 -lleveldb \
 -lmemenv

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE -D__NO_SYSTEM_INCLUDES
DEBUGFLAGS=-g
CFLAGS=-mthreads -O2 -msse2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=--Wl,--nxcompat

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif

ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"C:/deps/"
 LIBPATHS += -L"C:/deps/miniupnpc"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

ifneq (${USE_IPV6}, -)
	DEFS += -DUSE_IPV6=$(USE_IPV6)
endif

ifdef STATIC
  LIBS += \
    /usr/local/lib/libdb_cxx-4.8.a \
    /usr/local/lib/libboost_system-mgw44-mt-1_55.a \
    /usr/local/lib/libboost_filesystem-mgw44-mt-1_55.a \
    /usr/local/lib/libboost_program_options-mgw44-mt-1_55.a \
    /usr/local/lib/libboost_thread-mgw44-mt-1_55.a \
    /usr/local/ssl/lib/libssl.a \
    /usr/local/ssl/lib/libcrypto.a \
    /usr/local/lib/libz.a \
    /usr/local/cryptopp/libcryptopp.a \
    leveldb/libleveldb.a \
    leveldb/libmemenv.a
endif

LIBS += -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool \
        -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid \
        -lrpcrt4 -ladvapi32 -lws2_32 -lmswsock -lshlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/address.o \
    obj/addressmap.o \
    obj/aes.o \
    obj/backtrace.o \
    obj/buffers.o \
    obj/channel.o \
    obj/channeltls.o \
    obj/circpathbias.o \
    obj/circuitbuild.o \
    obj/circuitlist.o \
    obj/circuitmux.o \
    obj/circuitmux_ewma.o \
    obj/circuitstats.o \
    obj/circuituse.o \
    obj/command.o \
    obj/compat.o \
    obj/compat_libevent.o \
    obj/config.o \
    obj/config_codedigest.o \
    obj/confparse.o \
    obj/connection.o \
    obj/connection_edge.o \
    obj/connection_or.o \
    obj/container.o \
    obj/control.o \
    obj/cpuworker.o \
    obj/crypto.o \
    obj/crypto_curve25519.o \
    obj/crypto_format.o \
    obj/curve25519-donna.o \
    obj/di_ops.o \
    obj/directory.o \
    obj/dirserv.o \
    obj/dirvote.o \
    obj/dns.o \
    obj/dnsserv.o \
    obj/entrynodes.o \
    obj/ext_orport.o \
    obj/fp_pair.o \
    obj/geoip.o \
    obj/hibernate.o \
    obj/log.o \
    obj/memarea.o \
    obj/mempool.o \
    obj/microdesc.o \
    obj/networkstatus.o \
    obj/nodelist.o \
    obj/onion.o \
    obj/onion_fast.o \
    obj/onion_main.o \
    obj/onion_ntor.o \
    obj/onion_tap.o \
    obj/policies.o \
    obj/procmon.o \
    obj/reasons.o \
    obj/relay.o \
    obj/rendclient.o \
    obj/rendcommon.o \
    obj/rendmid.o \
    obj/rendservice.o \
    obj/rephist.o \
    obj/replaycache.o \
    obj/router.o \
    obj/routerlist.o \
    obj/routerparse.o \
    obj/routerset.o \
    obj/sandbox.o \
    obj/statefile.o \
    obj/status.o \
    obj/tor_util.o \
    obj/torgzip.o \
    obj/tortls.o \
    obj/transports.o \
    obj/util_codedigest.o \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/irc.o \
    obj/keystore.o \
    obj/main.o \
    obj/net.o \
    obj/protocol.o \
    obj/bitcoinrpc.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcmining.o \
    obj/rpcwallet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/script.o \
    obj/stealthaddress.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/noui.o \
    obj/pbkdf2.o \
    obj/kernel.o \
    obj/scrypt_mine.o \
    obj/scrypt-x86.o \
    obj/scrypt-x86_64.o \
    obj/txdb-leveldb.o \
    obj/sonicvortex.o

all: Sonicd.exe

test check: test_soniccoin.exe FORCE
	test_soniccoin.exe

obj/%.o: %.cpp $(HEADERS)
	$(CXX) -c $(CFLAGS) -o $@ $<

obj/%.o: %.c $(HEADERS)
	$(CC) -c $(CFLAGS) -o $@ $<

obj/%.o: tor/%.c $(HEADERS)
	$(CC) -c $(CFLAGS) -o $@ $<

obj/stealth.o: tor/stealth.cpp
	$(CXX) -c $(CFLAGS) -o $@ $<

obj/scrypt-x86.o: scrypt-x86.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

obj/scrypt-x86_64.o: scrypt-x86_64.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

Sonicd.exe: $(OBJS:obj/%=obj/%) obj/stealth.o
	$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))

obj-test/%.o: test/%.cpp $(HEADERS)
	$(CXX) -c $(TESTDEFS) $(CFLAGS) -o $@ $<

test_stealthcoin.exe: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))
	$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework $(LIBS)

clean:
	-rm -f Sonicd.exe Sonicd.exe
	-rm -f obj\*
	-rm -f obj-test\*

FORCE:
